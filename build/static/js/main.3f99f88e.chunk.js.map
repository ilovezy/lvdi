{"version":3,"sources":["view/PreviewView.jsx","view/HomeView.jsx","App.js","serviceWorker.js","index.js"],"names":["no","userId","projectCode","hotelId","hotelGroupId","props","useState","code","setCode","state","location","mode","icon","type","onLeftClick","history","goBack","defaultValue","onChange","value","Item","onClick","axios","post","then","doc","data","head","retMessage","fail","catch","err","thisStatus","setData","status","setStatus","isCompany","setIsCompany","useEffect","params","search","split","substr","get","response","contract","signatories","forEach","signatorie","signmentState","hasOwnProperty","text20","length","error","console","log","renderHeader","Brief","text1","text2","text3","text4","text5","text6","text21","text22","text7","text8","text9","text10","tet11","text12","text13","text14","text15","text16","text17","text18","text19","push","pathname","App","path","exact","component","PreviewView","HomeView","Boolean","window","hostname","match","defaults","baseURL","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3f99f88e.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { NavBar, List, WhiteSpace, Button, WingBlank } from 'antd-mobile';\n\nimport axios from 'axios'\n\nvar no, userId, projectCode, hotelId, hotelGroupId\nconst thisStatus = ['未签署', '已签署', '已拒绝', '锁定代签', '抄送', '']\n\nexport default props => {\n    const [data, setData] = useState({})\n    const [status, setStatus] = useState(5)\n    const [isCompany, setIsCompany] = useState(false)\n\n    useEffect(() => {\n        try {\n            const query = props.location.search // '?n=1&u=1&p=2&h=2&g=3'\n            const params = query.split('&')\n            no = params[0].substr(3)\n            userId = params[1].substr(2)\n            projectCode = params[2].substr(2)\n            hotelId = params[3].substr(2)\n            hotelGroupId = params[4].substr(2)\n\n            axios.get(\"/getContractSta?contractNo=\" + no).then((response) => {\n                if (response && response.data && response.data.contract && response.data.contract.signatories) {\n                    response.data.contract.signatories.forEach(signatorie => {\n                        if (signatorie.userId === userId) {\n                            setStatus(signatorie.signmentState)\n                        }\n                    })\n                }\n            })\n            axios.get(\"/getContract?contractNo=\" + no).then((response) => {\n                setData(response.data)\n                if (response.data.hasOwnProperty('text20') && response.data.text20.length > 0) {\n                    setIsCompany(true)\n                } else {\n                    setIsCompany(false)\n                }\n            })\n        } catch (error) {\n            console.log('解析参数失败')\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    return <div>\n        <NavBar mode=\"dark\">合同-{thisStatus[status]}</NavBar>\n        <List renderHeader={() => \"合同信息\"}>\n            <List.Item>出租方(以下简称甲方):\n            <List.Item.Brief>{data.text1}</List.Item.Brief></List.Item>\n            <List.Item>电话:\n            <List.Item.Brief>{(data.text2 && data.text2.length === 11) ? (data.text2.substr(0, 3) + \"****\" + data.text2.substr(7)) : data.text2}</List.Item.Brief></List.Item>\n            <List.Item>承租方(以下简称乙方):\n            <List.Item.Brief>{(data.text3 && data.text3.length >= 2) ? (data.text3.substr(0, data.text3.length - 2) + \"*\" + data.text3.substr(data.text3.length - 1)) : data.text3}</List.Item.Brief></List.Item>\n            <List.Item>证件类型:\n            <List.Item.Brief>{data.text4}</List.Item.Brief></List.Item>\n            <List.Item>证件号码:\n            <List.Item.Brief>{(data.text5 && data.text5.length >= 15) ? (data.text5.substr(0, 6) + \"****\" + data.text5.substr(14)) : data.text5}</List.Item.Brief></List.Item>\n            <List.Item>电话:\n            <List.Item.Brief>{(data.text6 && data.text6.length === 11) ? (data.text6.substr(0, 3) + \"****\" + data.text6.substr(7)) : data.text6}</List.Item.Brief></List.Item>\n            {isCompany ? <>\n                <List.Item>联系人:\n                <List.Item.Brief>{(data.text20 && data.text20.length >= 2) ? (data.text20.substr(0, data.text20.length - 2) + \"*\" + data.text20.substr(data.text20.length - 1)) : data.text20}</List.Item.Brief></List.Item>\n                <List.Item>联系人证件类型:\n                <List.Item.Brief>{data.text21}</List.Item.Brief></List.Item>\n                <List.Item>联系人证件号码:\n                <List.Item.Brief>{(data.text22 && data.text22.length >= 15) ? (data.text22.substr(0, 6) + \"****\" + data.text22.substr(14)) : data.text22}</List.Item.Brief></List.Item></> : null}\n        </List>\n        <WhiteSpace />\n        <List.Item>\n            <List.Item.Brief>\n                甲乙双方在平等自愿,互利互惠的基础上,<br />\n                经协商甲方愿意将使用,<br />\n                管理权属于自己的房租出租给乙方,<br />\n                双方根据国家相关规定,达成一致的协议:<br />\n            </List.Item.Brief>\n        </List.Item>\n        <List renderHeader={() => '第一条 公寓信息'}>\n            <List.Item>\n                <List.Item.Brief>\n                    甲方将拥有经营管理及转租权的<br />房类 {data.text7} 房号 {data.text8} 的房租出租给乙方.\n                </List.Item.Brief>\n            </List.Item>\n        </List>\n        <List renderHeader={() => '第二条 租金,押金交纳期及方式'}>\n            <List.Item>\n                <List.Item.Brief>\n                    1 <br />入住日期 {data.text9}<br />退租日期 {data.text10}.\n                </List.Item.Brief>\n            </List.Item>\n            <List.Item>\n                <List.Item.Brief>\n                    2 押金方式 {data.tet11}, 押金 {data.text12}元.\n                </List.Item.Brief>\n            </List.Item>\n            <List.Item>\n                <List.Item.Brief>\n                    3 协议月租 {data.text13}元, 实际月租 {data.text14}元.\n                </List.Item.Brief>\n            </List.Item>\n            <List.Item>\n                <List.Item.Brief>\n                    4 收款周期 {data.text15}, 收款日期: {data.text16}.\n                </List.Item.Brief>\n            </List.Item>\n        </List>\n        <WhiteSpace />\n        <List renderHeader={() => \"签字\"}>\n            <List.Item>出租方:\n            <List.Item.Brief>{data.text1}</List.Item.Brief></List.Item>\n            <List.Item>时间:\n            <List.Item.Brief>{`${data.text17}-${data.text18}-${data.text19}`}</List.Item.Brief></List.Item>\n            <List.Item>承租方:\n            <List.Item.Brief>{data.text3}</List.Item.Brief></List.Item>\n            <List.Item>时间:\n            <List.Item.Brief>{`${data.text17}-${data.text18}-${data.text19}`}</List.Item.Brief></List.Item>\n        </List>\n        <WhiteSpace />\n        <WhiteSpace />\n        <WhiteSpace />\n        <WhiteSpace />\n        {status === 0 ? <WingBlank><Button type=\"primary\" onClick={() => {\n            axios.get(`/postCheckCode1?userId=${userId}&projectCode=${projectCode}&hotelId=${hotelId}&hotelGroupId=${hotelGroupId}`)\n                .then(response => {\n                    props.history.push({ pathname: '/preview', state: { no, userId, projectCode } })\n                })\n        }}>确认签署</Button></WingBlank> : null}\n\n    </div>\n}\n","import React, { useState } from 'react'\nimport { NavBar, List, InputItem, Button, Toast, Icon } from 'antd-mobile';\nimport axios from 'axios'\n\n\nexport default props => {\n    const [code, setCode] = useState('')\n    let location = props.location\n    let state = location.state || {}\n    return <div>\n        <NavBar mode=\"dark\" icon={<Icon type=\"left\" />} onLeftClick={() => {\n            props.history.goBack()\n        }}>输入验证码</NavBar>\n        <List>\n            <InputItem defaultValue={code} onChange={value => {\n                setCode(value)\n            }}>验证码</InputItem>\n            <List.Item><Button type=\"primary\" onClick={() => {\n                axios.post(\"/postCheckCode\", {\n                    \"head\": {\n                        \"txTime\": \"20190903093001\"\n                    },\n                    \"proxySign\": {\n                        \"userId\": state.userId,\n                        \"projectCode\": state.projectCode,\n                        \"checkCode\": code\n                    }\n                })\n                    .then(doc => {\n                        if (doc.data && doc.data.head && doc.data.head.retMessage === \"OK\") {\n                            axios.post(\"/signContract \", {\n                                \"head\": {\n                                    \"txTime\": \"20190903150152\"\n                                },\n                                \"signContract\": {\n                                    \"contractNo\": state.no,\n                                    \"signInfo\": {\n                                        \"userId\": state.userId,\n                                        \"authorizationTime\": \"20190903150252\",\n                                        \"location\": \"127.0.0.1\",\n                                        \"signLocation\": \"Signature2\",\n                                        \"projectCode\": state.projectCode,\n                                    }\n                                }\n                            })\n                                .then(doc => {\n                                    if (doc.data && doc.data.head && doc.data.head.retMessage === \"OK\") {\n                                        Toast.fail('签署成功')\n                                        props.history.goBack()\n                                    } else {\n                                        Toast.fail('签署失败')\n                                    }\n                                })\n                                .catch(err => {\n                                    Toast.fail('签署失败')\n                                })\n                        } else {\n                            Toast.fail('验证码不正确')\n                        }\n                    })\n                    .catch(err => {\n                        Toast.fail(err)\n                    })\n            }}>确定</Button></List.Item>\n        </List>\n    </div>\n}\n","import React from 'react'\nimport { HashRouter, Route } from 'react-router-dom'\nimport HomeView from './view/HomeView'\nimport PreviewView from './view/PreviewView'\n\nfunction App() {\n  return <HashRouter>\n    <Route path=\"/\" exact component={PreviewView} />\n    <Route path=\"/preview\" component={HomeView} />\n  </HashRouter>\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport axios from 'axios'\n// axios.defaults.baseURL = 'http://115.159.202.175:18102/ipms/trustSign';\naxios.defaults.baseURL = 'http://115.159.202.175:18081/ipms/trustSign';\n// axios.defaults.baseURL = 'http://192.168.1.250:8103/ipms/trustSign';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}